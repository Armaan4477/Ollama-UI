name: Build

on:
  push:
    branches:
      - build

jobs:
  build-macos-x64:
    runs-on: macos-13
    steps:
      - name: Check out code
        uses: actions/checkout@v4

      - name: Install dependencies
        run: |
          pip3 install -r requirements.txt
          pip3 install pyinstaller

      - name: Build for macOS
        run: |
          pyinstaller --windowed \
          --name="Ollama UI" \
          ollama_client.py

      - name: Install create-dmg
        run: brew install create-dmg

      - name: Create DMG
        run: |
          cd dist
          create-dmg \
            --volname "Ollama UI" \
            --window-pos 200 120 \
            --window-size 400 400 \
            --icon-size 128 \
            --icon "Ollama UI.app" 100 150 \
            --app-drop-link 300 150 \
            --no-internet-enable \
            "Ollama UI(macos-x64).dmg" \
            "Ollama UI.app"

      - name: Upload macOS DMG
        uses: actions/upload-artifact@v4
        with:
          name: Ollama UI-macOS-x64
          path: dist/Ollama UI(macos-x64).dmg

  build-macos-arm:
    runs-on: macos-15
    steps:
      - name: Check out code
        uses: actions/checkout@v4

      - name: Install dependencies
        run: |
          pip3 install -r requirements.txt --break-system-packages
          pip3 install pyinstaller --break-system-packages

      - name: Build for macOS
        run: |
          pyinstaller --windowed \
          --name="Ollama UI" \
          ollama_client.py

      - name: Install create-dmg
        run: brew install create-dmg

      - name: Create DMG
        run: |
          cd dist
          create-dmg \
            --volname "Ollama UI" \
            --window-pos 200 120 \
            --window-size 400 400 \
            --icon-size 128 \
            --icon "Ollama UI.app" 100 150 \
            --app-drop-link 300 150 \
            --no-internet-enable \
            "Ollama UI(macos-arm).dmg" \
            "Ollama UI.app"

      - name: Upload macOS DMG
        uses: actions/upload-artifact@v4
        with:
          name: Ollama UI-macOS-arm
          path: dist/Ollama UI(macos-arm).dmg
     
  build-linux-x64:
    runs-on: ubuntu-22.04
    steps:
      - name: Check out code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.13'

      - name: Install dependencies
        run: |
          pip install -r requirements.txt

      - name: Install pyinstaller
        run: pip install pyinstaller

      - name: Build for Linux x64
        run: |
          pyinstaller --onefile --clean --name=Ollama UI ollama_client.py
          mv dist/Ollama UI "../'Ollama UI(linux x64)'"

      - name: Upload Linux x64 artifact
        uses: actions/upload-artifact@v4
        with:
          name: Ollama UI(linux x64)
          path: Ollama UI\(linux\ x64\)

  build-linux-arm:
    runs-on: ubuntu-22.04-arm
    steps:
      - name: Check out code
        uses: actions/checkout@v4

      - name: Build for Linux ARM using Docker
        run: |
          docker run --rm -v "${{ github.workspace }}:/workspace" -w /workspace/Desktop-app \
            --platform linux/arm64 python:3.13 bash -c "
              pip install pyinstaller && pip install -r requirements.txt &&
              pyinstaller --onefile --add-data './icons:icons' --add-data './assets:assets' \
                --add-data 'broadcast.py:.' --add-data 'constant.py:.' \
                --add-data 'credits_dialog.py:.' --add-data 'crypt_handler.py:.' \
                --add-data 'file_receiver_android.py:.' --add-data 'file_receiver_python.py:.' \
                --add-data 'file_receiver_swift.py:.' --add-data 'file_receiver.py:.' \
                --add-data 'file_sender_java.py:.' --add-data 'file_sender_swift.py:.' \
                --add-data 'file_sender.py:.' --add-data 'loges.py:.' \
                --add-data 'portsss.py:.' --add-data 'preferences.py:.' \
                --icon=./logo.png --name=Ollama UI main.py &&
              mv dist/Ollama UI '/workspace/Desktop-app/Ollama UI(linux arm)'"

      - name: Upload Linux ARM artifact
        uses: actions/upload-artifact@v4
        with:
          name: Ollama UI(linux arm)
          path: Desktop-app/Ollama UI(linux arm)

  build-windows-x64:
    runs-on: windows-latest
    steps:
      - name: Check out code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.13'

      - name: Install dependencies
        run: |
          pip install -r requirements.txt

      - name: Install pyinstaller
        run: pip install pyinstaller

      - name: Build for Windows x64
        run: |
             pyinstaller --onefile --windowed --name="Ollama UI" ollama_client.py

      - name: Upload Windows Installer
        uses: actions/upload-artifact@v4
        with:
          name: Ollama UI(windows x64)
          path: Desktop-app/dist/Ollama UI.exe